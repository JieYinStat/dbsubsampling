// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getIdxR_cpp
IntegerVector getIdxR_cpp(int r, NumericVector z, IntegerVector rdel);
RcppExport SEXP _dbsubsampling_getIdxR_cpp(SEXP rSEXP, SEXP zSEXP, SEXP rdelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rdel(rdelSEXP);
    rcpp_result_gen = Rcpp::wrap(getIdxR_cpp(r, z, rdel));
    return rcpp_result_gen;
END_RCPP
}
// getIdx_cpp
IntegerVector getIdx_cpp(int r, NumericVector z);
RcppExport SEXP _dbsubsampling_getIdx_cpp(SEXP rSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(getIdx_cpp(r, z));
    return rcpp_result_gen;
END_RCPP
}
// rcppIBOSS
IntegerVector rcppIBOSS(NumericMatrix X, int n);
RcppExport SEXP _dbsubsampling_rcppIBOSS(SEXP XSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppIBOSS(X, n));
    return rcpp_result_gen;
END_RCPP
}
// armarcppIBOSS
arma::uvec armarcppIBOSS(arma::mat X, int n);
RcppExport SEXP _dbsubsampling_armarcppIBOSS(SEXP XSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(armarcppIBOSS(X, n));
    return rcpp_result_gen;
END_RCPP
}
// L2norm
NumericVector L2norm(NumericMatrix X);
RcppExport SEXP _dbsubsampling_L2norm(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(L2norm(X));
    return rcpp_result_gen;
END_RCPP
}
// bottom_t_index
IntegerVector bottom_t_index(NumericVector loss, int t);
RcppExport SEXP _dbsubsampling_bottom_t_index(SEXP lossSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type loss(lossSEXP);
    Rcpp::traits::input_parameter< int >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(bottom_t_index(loss, t));
    return rcpp_result_gen;
END_RCPP
}
// ComputeLoss
NumericVector ComputeLoss(IntegerVector candi, int last_index, NumericMatrix X, NumericVector norm);
RcppExport SEXP _dbsubsampling_ComputeLoss(SEXP candiSEXP, SEXP last_indexSEXP, SEXP XSEXP, SEXP normSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type candi(candiSEXP);
    Rcpp::traits::input_parameter< int >::type last_index(last_indexSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type norm(normSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeLoss(candi, last_index, X, norm));
    return rcpp_result_gen;
END_RCPP
}
// rcppOSS
IntegerVector rcppOSS(NumericMatrix X, int n);
RcppExport SEXP _dbsubsampling_rcppOSS(SEXP XSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppOSS(X, n));
    return rcpp_result_gen;
END_RCPP
}
// armabottom_k
arma::vec armabottom_k(arma::vec x, unsigned int k);
RcppExport SEXP _dbsubsampling_armabottom_k(SEXP xSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(armabottom_k(x, k));
    return rcpp_result_gen;
END_RCPP
}
// armaScaleMatrix
arma::mat armaScaleMatrix(arma::mat X);
RcppExport SEXP _dbsubsampling_armaScaleMatrix(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(armaScaleMatrix(X));
    return rcpp_result_gen;
END_RCPP
}
// armaComputeLoss
arma::vec armaComputeLoss(arma::mat X, arma::vec xa, arma::mat y, double ya, double tPow);
RcppExport SEXP _dbsubsampling_armaComputeLoss(SEXP XSEXP, SEXP xaSEXP, SEXP ySEXP, SEXP yaSEXP, SEXP tPowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type xa(xaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type ya(yaSEXP);
    Rcpp::traits::input_parameter< double >::type tPow(tPowSEXP);
    rcpp_result_gen = Rcpp::wrap(armaComputeLoss(X, xa, y, ya, tPow));
    return rcpp_result_gen;
END_RCPP
}
// armaOSS
arma::uvec armaOSS(arma::mat x, int k, double tPow);
RcppExport SEXP _dbsubsampling_armaOSS(SEXP xSEXP, SEXP kSEXP, SEXP tPowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type tPow(tPowSEXP);
    rcpp_result_gen = Rcpp::wrap(armaOSS(x, k, tPow));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dbsubsampling_getIdxR_cpp", (DL_FUNC) &_dbsubsampling_getIdxR_cpp, 3},
    {"_dbsubsampling_getIdx_cpp", (DL_FUNC) &_dbsubsampling_getIdx_cpp, 2},
    {"_dbsubsampling_rcppIBOSS", (DL_FUNC) &_dbsubsampling_rcppIBOSS, 2},
    {"_dbsubsampling_armarcppIBOSS", (DL_FUNC) &_dbsubsampling_armarcppIBOSS, 2},
    {"_dbsubsampling_L2norm", (DL_FUNC) &_dbsubsampling_L2norm, 1},
    {"_dbsubsampling_bottom_t_index", (DL_FUNC) &_dbsubsampling_bottom_t_index, 2},
    {"_dbsubsampling_ComputeLoss", (DL_FUNC) &_dbsubsampling_ComputeLoss, 4},
    {"_dbsubsampling_rcppOSS", (DL_FUNC) &_dbsubsampling_rcppOSS, 2},
    {"_dbsubsampling_armabottom_k", (DL_FUNC) &_dbsubsampling_armabottom_k, 2},
    {"_dbsubsampling_armaScaleMatrix", (DL_FUNC) &_dbsubsampling_armaScaleMatrix, 1},
    {"_dbsubsampling_armaComputeLoss", (DL_FUNC) &_dbsubsampling_armaComputeLoss, 5},
    {"_dbsubsampling_armaOSS", (DL_FUNC) &_dbsubsampling_armaOSS, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_dbsubsampling(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
